class DFA:
    def __init__(self):
        self.states = {'q0', 'q1', 'q2', 'q_reject'}
        self.alphabet = {'0', '1'}
        self.transitions = {
            ('q0', '0'): 'q1',
            ('q0', '1'): 'q_reject',
            ('q1', '0'): 'q1',
            ('q1', '1'): 'q2',
            ('q2', '0'): 'q1',
            ('q2', '1'): 'q_reject',
            ('q_reject', '0'): 'q_reject',
            ('q_reject', '1'): 'q_reject'
        }
        self.start_state = 'q0'
        self.accept_states = {'q2'}
        self.current_state = self.start_state

    def reset(self):
        self.current_state = self.start_state

    def process_input(self, input_string):
        self.reset()
        for char in input_string:
            if char in self.alphabet:
                self.current_state = self.transitions.get((self.current_state, char), 'q_reject')
            else:
                self.current_state = 'q_reject'
                break

        return self.current_state in self.accept_states

    def accepts(self, input_string):
        is_accepted = self.process_input(input_string)
        return is_accepted

# Testing the DFA
dfa = DFA()

# Test strings
test_strings = ['01', '10', '001', '101', '111', '0001']

# Test and print results
for string in test_strings:
    result = dfa.accepts(string)
    print(f"String '{string}' accepted? {result}")
